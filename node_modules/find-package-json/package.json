{
  "_args": [
    [
      {
        "raw": "find-package-json@^1.0.0",
        "scope": null,
        "escapedName": "find-package-json",
        "name": "find-package-json",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "D:\\#ELECTRON_PROJECTS\\AeroApp-D\\node_modules\\rijs.npm"
    ]
  ],
  "_from": "find-package-json@>=1.0.0 <2.0.0",
  "_id": "find-package-json@1.1.0",
  "_inCache": true,
  "_location": "/find-package-json",
  "_nodeVersion": "8.9.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/find-package-json_1.1.0_1523972498015_0.5758288875290101"
  },
  "_npmUser": {
    "name": "3rdeden",
    "email": "npm@3rd-Eden.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "find-package-json@^1.0.0",
    "scope": null,
    "escapedName": "find-package-json",
    "name": "find-package-json",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/rijs.npm"
  ],
  "_resolved": "https://registry.npmjs.org/find-package-json/-/find-package-json-1.1.0.tgz",
  "_shasum": "269b0c148bbe389f027e2c1e0c72fa108eadb348",
  "_shrinkwrap": null,
  "_spec": "find-package-json@^1.0.0",
  "_where": "D:\\#ELECTRON_PROJECTS\\AeroApp-D\\node_modules\\rijs.npm",
  "author": {
    "name": "Arnout Kazemier"
  },
  "bugs": {
    "url": "https://github.com/3rd-Eden/find-package-json/issues"
  },
  "dependencies": {},
  "description": "Find package.json files in parent directories, keep finding until you find the right one using iterators.",
  "devDependencies": {
    "assume": "2.0.x",
    "istanbul": "0.4.x",
    "mocha": "5.1.x",
    "pre-commit": "1.2.x"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-ldihxiIFpewACALK0tUByf3GmOaTBjI5OcvwJ3mExgERUZBsSOBV8QM6vVb0/ZqylpzY6Od6SsP8bjFv7fKiTw==",
    "shasum": "269b0c148bbe389f027e2c1e0c72fa108eadb348",
    "tarball": "https://registry.npmjs.org/find-package-json/-/find-package-json-1.1.0.tgz",
    "fileCount": 4,
    "unpackedSize": 6508,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa1fmSCRA9TVsSAnZWagAAasMP+war0oMEX6RT3l/SFBQ2\nfgmREJ/A2qn2UYg1XsQJZrMwt9p9fr77qsDw73+KZpS+qJgQh4OgE8sHxKsv\noUyq46g9u9THy41i0SLJlIEgqXor5O41Zy3ZBIZqD4psUQUPVRUY8EQ+LGRj\ntYg3kPC/dZsu8M1ISgGC7/FdX/UHEMRwMGUrbmh5uQvzEWm3o4d13N3ImXZl\nwERzb1VQzuuRTTYyoMJYvSb6U+40o3OB4j6jtRHjuN3UcyNya8Bzi/iG9ZG6\nd2K0ifRzG+yHty9llxzkf5cFH5ic5/WwEtGjdi7xVq19Vw0CDyvzP21ODwUS\nzty5dVohHm35WndgafjTNvEhwiFRuOU3GQLs1knlySb20NMcIYa34uZ7tdEU\npB+L57Qs2qzHZEVQ+LkqTTxIudkpvxksjve6k1qKn02X3I8gxPWA7CF8l3bt\nrMh8MmTjBO0maNRPuayoovx/7xC/fC66HdTbrd5nZ0t5qS64ckQwROipbhOr\nzRjsWteJfhvWHHo2BhiLTw2X2b9Q/2k5jnBhxBUhpTAst7mgBhvREhdaPNWE\nqpuMqXBMrxlYs4EG37b85x52u2LgWHc1grTY0qpFAckUJYMHPCTM/C1DpdZo\nba6SbHCa2UY68ujxPqgxADu4BShSsLXexcQMkAQ1ogB2CG+2gmieoR+9MeIf\nWcDe\r\n=USOR\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "74e5abb9b099074213846c5f5f4b0e4889c1eaa5",
  "homepage": "https://github.com/3rd-Eden/find-package-json#readme",
  "keywords": [
    "package",
    "package.json",
    "json",
    "find-package-json",
    "directory",
    "parent",
    "package-json",
    "read-package-json"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "3rdeden",
      "email": "npm@3rd-Eden.com"
    }
  ],
  "name": "find-package-json",
  "optionalDependencies": {},
  "readme": "# find-package-json\n\nEasily find package.json files that you're searching for. It spiders parent\ndirectories for `package.json` files and correctly reads the results. It follows\nan ES6 iterator design so it should be easy to implement. \n\n## Installation\n\nThe module is released in the public npm registry and can be installed by\nrunning:\n\n```\nnpm install --save find-package-json\n```\n\n## Usage\n\nWe expose a single function as module interface. So in all examples we assume\nthat you've already required the code as illustrated in the example below:\n\n```js\n'use strict';\n\nvar finder = require('find-package-json');\n```\n\nThe function accepts 1 optional argument which is the directory it should start\nsearching in or a module object with a `filename` key. If nothing is provided\nit will default to `process.cwd()` as entry point.\n\nAs we're build upon the iterator interface you can simply call the `.next()`\nfunction of the returned result to find the first package.json. If you don't\nlike the result, call `.next()` again to find the next file. Please do note that\nthese methods do synchronous API calls in Node.js so they are blocking.\n\n```js\nvar f = finder(__dirname);\n\nconsole.log(f.next().value); // the package.json object\nconsole.log(f.next().filename); // the path to the package.json file\n```\n\nYou can also search for the global `module` object:\n\n```js\nvar f = finder(module);\n\nconsole.log(f.next().value); // the package.json object\nconsole.log(f.next().filename); // the path to the package.json file\n```\n\nIf there is no more package.json's to be found, the method will set the returned\n`done` key as `true`;\n\n```js\nvar f = finder(__dirname);\n\nf.next().done // false\nf.next().done // true\n```\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/3rd-Eden/find-package-json.git"
  },
  "scripts": {
    "100%": "istanbul check-coverage --statements 100 --functions 100 --lines 100 --branches 100",
    "coverage": "istanbul cover ./node_modules/.bin/_mocha -- test.js",
    "test": "mocha test.js",
    "test-travis": "istanbul cover node_modules/.bin/_mocha --report lcovonly -- test.js",
    "watch": "mocha --watch test.js"
  },
  "version": "1.1.0"
}
